<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.CollectMapper">
    <resultMap id="BaseResultMap" type="com.entity.Collect">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="seller_id" property="sellerId" jdbcType="INTEGER"/>
        <result column="product_id" property="productId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, seller_id, product_id
    </sql>
    <!--通过sellerid查询商家收藏数量-->
    <select id="selectBySellerId" resultType="Integer" parameterType="java.lang.Integer">
        select count(*)
        from collect
        where seller_id = #{sellerid}
    </select>

    <!--通过userid+sellerid或productid查询单条数据-->
    <select id="selectByUseridOr" resultMap="BaseResultMap" parameterType="map">
        select * from collect where user_id = #{userid}
        <if test="sellerid != null">
            and seller_id = #{seller_id}
        </if>
        <if test="productid != null">
            and product_id = #{productid}
        </if>
    </select>

    <!--通过productid查询数据-->
    <select id="selectByProductid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select *
        from collect
        where product_id = #{productid}
    </select>

    <!--通过userid查询多条数据-->
    <select id="selectProductByUserid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select c.product_id
        from collect c
        where user_id = #{userid}
          AND seller_id is null
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from collect
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from collect
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.entity.Collect">
        insert into collect (id, user_id, seller_id, product_id)
        values (#{id,jdbcType=INTEGER},
                #{userId,jdbcType=INTEGER},
                #{sellerId,jdbcType=INTEGER},
                #{productId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.entity.Collect">
        insert into collect
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="sellerId != null">
                seller_id,
            </if>
            <if test="productId != null">
                product_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="sellerId != null">
                #{sellerId,jdbcType=INTEGER},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.entity.Collect">
        update collect
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="sellerId != null">
                seller_id = #{sellerId,jdbcType=INTEGER},
            </if>
            <if test="productId != null">
                product_id = #{productId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.entity.Collect">
        update collect
        set user_id    = #{userId,jdbcType=INTEGER},
            seller_id  = #{sellerId,jdbcType=INTEGER},
            product_id = #{productId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>